diff --git a/BUILD.bazel b/BUILD.bazel
index 734bec81a..bfaa3dd8f 100644
--- a/BUILD.bazel
+++ b/BUILD.bazel
@@ -346,13 +346,83 @@ alias(
 )

 cc_binary(
-    name = "protoc",
+    name = "compiled_protoc",
     copts = COPTS,
     linkopts = LINK_OPTS,
     visibility = ["//visibility:public"],
     deps = ["//src/google/protobuf/compiler:protoc_lib_stage1"],
 )

+# Lifted from `rules_proto`
+config_setting(
+    name = "linux-aarch_64",
+    constraint_values = [
+        "@platforms//os:linux",
+        "@platforms//cpu:aarch64",
+    ],
+)
+
+config_setting(
+    name = "linux-x86_64",
+    constraint_values = [
+        "@platforms//os:linux",
+        "@platforms//cpu:x86_64",
+    ],
+)
+
+config_setting(
+    name = "linux-ppcle_64",
+    constraint_values = [
+       "@platforms//os:linux",
+       "@platforms//cpu:ppc64le",
+    ],
+)
+
+config_setting(
+    name = "osx-aarch_64",
+    constraint_values = [
+        "@platforms//os:osx",
+        "@platforms//cpu:aarch64",
+    ],
+)
+
+config_setting(
+    name = "osx-x86_64",
+    constraint_values = [
+        "@platforms//os:osx",
+        "@platforms//cpu:x86_64",
+    ],
+)
+
+config_setting(
+    name = "win64",
+    constraint_values = [
+        "@platforms//os:windows",
+        "@platforms//cpu:x86_64",
+    ],
+)
+
+# Use precompiled binaries where possible.
+alias(
+    name = "protoc",
+    actual = select({
+        ":linux-aarch_64": "@com_google_protobuf_protoc_linux_aarch_64//:protoc",
+        ":linux-x86_64": "@com_google_protobuf_protoc_linux_x86_64//:protoc",
+        ":linux-ppcle_64": "@com_google_protobuf_protoc_linux_ppcle_64//:protoc",
+        ":osx-aarch_64": "@com_google_protobuf_protoc_osx_aarch_64//:protoc",
+        ":osx-x86_64": "@com_google_protobuf_protoc_osx_x86_64//:protoc",
+        ":win64": "@com_google_protobuf_protoc_win64//:protoc",
+        "//conditions:default": ":compiled_protoc",
+    }),
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "protobuf_python_genproto",
+    actual = "//python:well_known_types_py_pb2_genproto",
+    visibility = ["//visibility:public"],
+)
+
 cc_binary(
     name = "protoc_stage0",
     copts = COPTS,
diff --git a/src/google/protobuf/map.cc b/src/google/protobuf/map.cc
index 4615786ef..c08ca105a 100644
--- a/src/google/protobuf/map.cc
+++ b/src/google/protobuf/map.cc
@@ -118,7 +118,7 @@ void UntypedMapBase::ClearTableImpl(bool reset) {
   ABSL_DCHECK_NE(num_buckets_, kGlobalEmptyTableSize);

   if (arena_ == nullptr) {
-    const auto loop = [this](auto destroy_node) {
+    const auto loop = [&, this](auto destroy_node) {
       NodeBase** table = table_;
       for (map_index_t b = index_of_first_non_null_, end = num_buckets_;
            b < end; ++b) {
diff --git a/src/google/protobuf/port_def.inc b/src/google/protobuf/port_def.inc
index edd6d5122..82261a85b 100644
--- a/src/google/protobuf/port_def.inc
+++ b/src/google/protobuf/port_def.inc
@@ -770,7 +770,7 @@ static_assert(PROTOBUF_ABSL_MIN(20230125, 3),
 #pragma clang diagnostic ignored "-Wshorten-64-to-32"
 // Turn on -Wdeprecated-enum-enum-conversion. This deprecation comes in C++20
 // via http://wg21.link/p1120r0.
-#pragma clang diagnostic error "-Wdeprecated-enum-enum-conversion"
+// #pragma clang diagnostic error "-Wdeprecated-enum-enum-conversion"
 // This error has been generally flaky, but we need to disable it specifically
 // to fix https://github.com/protocolbuffers/protobuf/issues/12313
 #pragma clang diagnostic ignored "-Wunused-parameter"
@@ -848,7 +848,7 @@ static_assert(PROTOBUF_ABSL_MIN(20230125, 3),
 #endif

 #if defined(PROTOBUF_ENABLE_DEBUG_LOGGING_MAY_LEAK_PII) && \
-    PROTOBUF_ENABLE_DEBUG_LOGGING_MAY_LEAK_PII
+  PROTOBUF_ENABLE_DEBUG_LOGGING_MAY_LEAK_PII
 #define PROTOBUF_DEBUG true
 #else
 #define PROTOBUF_DEBUG false
diff --git a/python/google/protobuf/__init__.py b/python/google/protobuf/__init__.py
index 38a0c6dbd..b8bdd45e4 100755
--- a/python/google/protobuf/__init__.py
+++ b/python/google/protobuf/__init__.py
@@ -8,3 +8,10 @@
 # Copyright 2007 Google Inc. All Rights Reserved.

 __version__ = '6.31.0'
+
+
+if __name__ != '__main__':
+    try:
+        __import__('pkg_resources').declare_namespace(__name__)
+    except ImportError:
+        __path__ = __import__('pkgutil').extend_path(__path__, __name__)
diff --git a/src/google/protobuf/compiler/BUILD.bazel b/src/google/protobuf/compiler/BUILD.bazel
index d310bbae3..7796ac368 100644
--- a/src/google/protobuf/compiler/BUILD.bazel
+++ b/src/google/protobuf/compiler/BUILD.bazel
@@ -561,7 +561,7 @@ cc_library(
     srcs = ["retention.cc"],
     hdrs = ["retention.h"],
     strip_include_prefix = "/src",
-    visibility = ["//src/google/protobuf:__subpackages__"],
+    visibility = ["//visibility:public"],
     deps = [
         "//src/google/protobuf",
         "//src/google/protobuf:port",
diff --git a/src/google/protobuf/io/BUILD.bazel b/src/google/protobuf/io/BUILD.bazel
index 9811abcf2..810be2552 100644
--- a/src/google/protobuf/io/BUILD.bazel
+++ b/src/google/protobuf/io/BUILD.bazel
@@ -162,7 +162,7 @@ cc_library(
         "@abseil-cpp//absl/log:absl_log",
     ] + select({
         "//build_defs:config_msvc": [],
-        "//conditions:default": ["@zlib"],
+        "//conditions:default": ["@envoy//bazel/foreign_cc:zlib"],
     }),
 )

diff --git a/upb/port/undef.inc b/upb/port/undef.inc
index 3aaff1526..ed7de83a1 100644
--- a/upb/port/undef.inc
+++ b/upb/port/undef.inc
@@ -14,6 +14,7 @@
 #undef UPB_MAPTYPE_STRING
 #undef UPB_EXPORT
 #undef UPB_INLINE
+#undef UPB_INLINE_IF_NOT_GCC
 #undef UPB_API
 #undef UPBC_API
 #undef UPB_API_INLINE
diff --git a/bazel/system_python.bzl b/bazel/system_python.bzl
new file mode 100644
index 000000000..45a6b35d5
--- /dev/null
+++ b/bazel/system_python.bzl
@@ -0,0 +1,17 @@
+# Copyright (c) 2009-2021, Google LLC
+# All rights reserved.
+#
+# Use of this source code is governed by a BSD-style
+# license that can be found in the LICENSE file or at
+# https://developers.google.com/open-source/licenses/bsd
+
+"""Temporary alias to repository rule for using Python 3.x headers from the system."""
+
+load(
+    "//python/dist:system_python.bzl",
+    _system_python = "system_python",
+)
+
+# TODO: Temporary alias. This is deprecated and to be removed in a future
+# release. Users should now get system_python from protobuf_deps.bzl.
+system_python = _system_python
\ No newline at end of file
diff --git a/python/dist/system_python.bzl b/python/dist/system_python.bzl
index 390bf3c2a..f3ec24c11 100644
--- a/python/dist/system_python.bzl
+++ b/python/dist/system_python.bzl
@@ -242,7 +242,7 @@ def _system_python_impl(repository_ctx):
 # Pip dependencies can optionally be specified using a wrapper around rules_python's repository rules:
 #   load("@system_python//:pip.bzl", "pip_install")
 #   pip_install(
-#       name="protobuf_pip_deps",
+#       name="pip_deps",
 #       requirements = "@com_google_protobuf//python:requirements.txt",
 #   )
 # An optional argument `requirements_overrides` takes a dictionary mapping python versions to alternate
@@ -264,8 +264,9 @@ def _system_python_impl(repository_ctx):
 # the `python3` command on the system.
 system_python = repository_rule(
     implementation = _system_python_impl,
-    local = True,
     attrs = {
-        "minimum_python_version": attr.string(default = "3.9"),
+        "minimum_python_version": attr.string(default = "3.7"),
     },
+    configure = True,
+    local = True,
 )
