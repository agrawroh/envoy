syntax = "proto3";

package envoy.extensions.filters.listener.postgres_inspector.v3alpha;

import "google/protobuf/wrappers.proto";

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.filters.listener.postgres_inspector.v3alpha";
option java_outer_classname = "PostgresInspectorProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/contrib/envoy/extensions/filters/listener/postgres_inspector/v3alpha";
option (udpa.annotations.file_status).work_in_progress = true;
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: PostgreSQL Inspector]
// PostgreSQL Inspector :ref:`configuration overview <config_listener_filters_postgres_inspector>`.
// [#extension: envoy.filters.listener.postgres_inspector]

message PostgresInspector {
  // The human readable prefix to use when emitting :ref:`statistics
  // <config_listener_filters_postgres_inspector_stats>`.
  string stat_prefix = 1 [(validate.rules).string = {min_len: 1}];

  // Maximum number of bytes to read from a connection to determine if it is using
  // the PostgreSQL protocol. Defaults to 16 bytes.
  google.protobuf.UInt32Value max_read_bytes = 2 [(validate.rules).uint32 = {lte: 1024}];
} 