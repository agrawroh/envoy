syntax = "proto3";

package envoy.config.core.v3;

import "envoy/config/core/v3/address.proto";

import "google/protobuf/duration.proto";
import "google/protobuf/wrappers.proto";

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.config.core.v3";
option java_outer_classname = "ResolverProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/config/core/v3;corev3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Resolver]

// Configuration of DNS resolver option flags which control the behavior of the DNS resolver.
message DnsResolverOptions {
  // Use TCP for all DNS queries instead of the default protocol UDP.
  bool use_tcp_for_dns_lookups = 1;

  // Do not use the default search domains; only query hostnames as-is or as aliases.
  bool no_default_search_domain = 2;

  // The initial response timeout given to a name server to reply to a query on the first attempt.
  // After the initial attempt, the timeout algorithm becomes more intricate, but remains proportionate to this value.
  // The default is 2 seconds (2000 ms).
  google.protobuf.Duration dns_resolver_query_timeout = 3
      [(validate.rules).duration = {gte {nanos: 1000000}}];

  // The number of attempts the resolver will make to contact the name server before giving up. The default is 3 tries.
  google.protobuf.UInt32Value dns_resolver_query_tries = 4 [(validate.rules).uint32 = {gte: 1}];
}

// DNS resolution configuration which includes the underlying dns resolver addresses and options.
message DnsResolutionConfig {
  // A list of dns resolver addresses. If specified, the DNS client library will perform resolution
  // via the underlying DNS resolvers. Otherwise, the default system resolvers
  // (e.g., /etc/resolv.conf) will be used.
  repeated Address resolvers = 1 [(validate.rules).repeated = {min_items: 1}];

  // Configuration of DNS resolver option flags which control the behavior of the DNS resolver.
  DnsResolverOptions dns_resolver_options = 2;
}
