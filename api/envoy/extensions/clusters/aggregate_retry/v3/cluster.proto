syntax = "proto3";

package envoy.extensions.clusters.aggregate_retry.v3;

import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.clusters.aggregate_retry.v3";
option java_outer_classname = "ClusterProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/clusters/aggregate_retry/v3;aggregate_retryv3";
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Aggregate retry cluster configuration]

// Configuration for the aggregate retry cluster. This cluster type allows retries to use different
// sub-clusters based on the retry attempt number. The first request uses the first cluster in the
// list, the first retry uses the second cluster, and so on.
// [#extension: envoy.clusters.aggregate_retry]
message ClusterConfig {
  // Behavior when retry attempts exceed the number of configured clusters.
  enum RetryOverflowBehavior {
    // Further retry attempts fail with no host available.
    FAIL = 0;

    // Continue using the last cluster in the list for further retry attempts.
    USE_LAST_CLUSTER = 1;
  }

  // Load balancing clusters for retry progression. The first cluster is used for the initial
  // request, the second for the first retry, and so on. Must contain at least one cluster.
  repeated string clusters = 1 [(validate.rules).repeated = {min_items: 1}];

  // Controls behavior when the number of retry attempts exceeds the number of configured clusters.
  //
  // Defaults to ``FAIL``.
  RetryOverflowBehavior retry_overflow_behavior = 2;
}
