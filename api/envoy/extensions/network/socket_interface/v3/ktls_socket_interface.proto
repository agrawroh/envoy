syntax = "proto3";

package envoy.extensions.network.socket_interface.v3;

option java_package = "io.envoyproxy.envoy.extensions.network.socket_interface.v3";
option java_outer_classname = "KTlsSocketInterfaceProto";
option java_multiple_files = true;
option go_package = "github.com/envoyproxy/go-control-plane/envoy/extensions/network/socket_interface/v3;socket_interfacev3";

// [#protodoc-title: kTLS socket interface configuration]

// Configuration for kTLS socket interface that enables kernel TLS offload.
message KTlsSocketInterface {
  // Enable/disable kTLS socket interface. Defaults to enabled if the socket interface is specified.
  bool enabled = 1;
  
  // Enable zero-copy operations for TX path (requires NIC offload support).
  // When enabled and supported, allows direct DMA from userspace buffers to the NIC.
  bool enable_tx_zerocopy = 2;
  
  // Enable TLS_RX_EXPECT_NO_PAD optimization (TLS 1.3 only). This allows decryption
  // directly into userspace buffers when the sender is trusted to not pad records.
  bool enable_rx_no_pad = 3;
} 